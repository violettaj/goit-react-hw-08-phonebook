{"version":3,"file":"static/js/577.38a062e1.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactListElement/ContactListElement.module.css?1371","components/ContactListElement/ContactListElement.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","redux/filterSlice.js","components/Phonebook/Phonebook.js","pages/User.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilters = state => state.filters;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"add\":\"ContactForm_add__2y4N5\",\"btn\":\"ContactForm_btn__wll+u\",\"label\":\"ContactForm_label__-cVXI\"};","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit({ name, number });\n    dispatch(addContact({ name, number }));\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.add}\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          className={css.add}\n          onChange={handleChange}\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.btn} type=\"submit\">\n        Add contacts\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListElement_item__U2VFb\",\"delete\":\"ContactListElement_delete__d7w1d\"};","import css from './ContactListElement.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactListElement = ({ id, name, number, onDelete }) => {\n  return (\n    <li className={css.item}>\n      <p>\n        {name}: {number}{' '}\n      </p>\n      <button className={css.delete} type=\"button\" onClick={() => onDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListElement.propTypes = {\n  number: PropTypes.string,\n  name: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { ContactListElement } from '../ContactListElement/ContactListElement.js';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({ contacts, onDelete }) => {\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ name, id, number }) => (\n        <ContactListElement\n          key={id}\n          name={name}\n          number={number}\n          onDelete={onDelete}\n          id={id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  number: PropTypes.number,\n  name: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"search\":\"Filter_search__G+v4u\",\"title\":\"Filter_title__pSkfx\"};","import css from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <div className={css.filter}>\n      <label className={css.title}>Find contacts by name</label>\n      <input\n        className={css.search}\n        value={value}\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__A8MMG\"};","import { createSlice } from '@reduxjs/toolkit';\n\nconst filtersInitialState = {\n  value: '',\n};\n\nconst filterSlice = createSlice({\n  name: 'filters',\n  initialState: filtersInitialState,\n  reducers: {\n    addValue: {\n      reducer(state, action) {\n        state.value = action.payload;\n      },\n    },\n  },\n});\n\nexport const { addValue } = filterSlice.actions;\nexport const filtersReducer = filterSlice.reducer;\n","import React, { useState, useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { nanoid } from 'nanoid';\nimport { Filter } from 'components/Filter/Filter';\nimport css from './Phonebook.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { addValue } from 'redux/filterSlice';\n\nexport const Phonebook = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const dispatch = useDispatch();\n  const handleContactAdd = ({ name, number }) => {\n    const normalizationName = name.toLowerCase();\n\n    const alreadyInContacts = contacts.some(\n      ({ name }) => name.toLocaleLowerCase() === normalizationName\n    );\n    if (alreadyInContacts) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      number: number,\n      id: nanoid(),\n    };\n\n    setContacts(contacts => [...contacts, newContact]);\n  };\n\n  const handleFilterChange = evt => {\n    setFilter(evt.target.value);\n    const value = evt.target.value;\n    dispatch(addValue(value));\n  };\n  const handleContactsFiltered = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const handleContactItemDelete = contactsId => {\n    setContacts(contacts.filter(contact => contact.id !== contactsId));\n    dispatch(deleteContact(contactsId));\n  };\n\n  useEffect(() => {\n    const list = localStorage.getItem('contacts-list');\n    if (!list) return;\n    setContacts(JSON.parse(list));\n  }, []);\n\n  useEffect(() => {\n    const contactListStringified = JSON.stringify(contacts);\n    localStorage.setItem('contacts-list', contactListStringified);\n  }, [contacts]);\n  console.log(contacts);\n  return (\n    <div className={css.phonebook}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleContactAdd} />\n      <h2>Contacts</h2>\n      {contacts.length > 0 && (\n        <div>\n          <Filter value={filter} onChange={handleFilterChange} />\n          <ContactList\n            contacts={handleContactsFiltered()}\n            onDelete={handleContactItemDelete}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Phonebook />\n      <div>{isLoading && 'Request in progress...'}</div>\n    </>\n  );\n};\nexport default User;\n"],"names":["selectIsLoading","state","contacts","isLoading","ContactForm","onSubmit","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","evt","target","value","clearForm","className","css","preventDefault","addContact","onChange","type","pattern","title","required","ContactListElement","id","onDelete","onClick","ContactList","map","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Filter","filterSlice","createSlice","initialState","reducers","addValue","reducer","action","payload","actions","Phonebook","setContacts","filter","setFilter","useEffect","list","localStorage","getItem","JSON","parse","contactListStringified","stringify","setItem","console","log","normalizationName","toLowerCase","some","toLocaleLowerCase","alert","newContact","length","contact","includes","contactsId","deleteContact","useSelector","fetchContacts","Helmet"],"sourceRoot":""}